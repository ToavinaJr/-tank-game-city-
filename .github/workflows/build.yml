name: Build Qt C++ App

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    env:
      QT_VERSION: 6.6.0
      QT_DIR: C:\Qt\6.6.0\msvc_64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # Installer Visual Studio avec MSBuild
      - name: Setup Visual Studio
        uses: microsoft/setup-vs@v1
        with:
          vs-version: '17'
          include-components: 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64,Microsoft.VisualStudio.Component.Windows10SDK.19041'

      # Installer Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          arch: 'win64_msvc'
          modules: qtbase,qtwidgets,qtgui,qtmultimedia

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Visual Studio 17 2022" -DCMAKE_PREFIX_PATH="${{ env.QT_DIR }}"

      - name: Build with MSBuild
        run: |
          cmake --build build --config Release

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    env:
      QT_VERSION: 6.6.0
      QT_DIR: $HOME/Qt/6.6.0/gcc_64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # Installer d√©pendances Linux pour Multimedia
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake libpulse-dev libasound2-dev libglu1-mesa-dev libvulkan-dev

      # Installer Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          host: linux
          arch: 'gcc_64'
          modules: qtbase,qtwidgets,qtgui,qtmultimedia

      - name: Configure CMake
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_PREFIX_PATH=${{ env.QT_DIR }} -DCMAKE_BUILD_TYPE=Release -DQT_DEBUG_FIND_PACKAGE=ON

      - name: Build
        run: cmake --build build --config Release

  build-macos:
    name: Build macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Qt
        run: |
          brew update
          brew install qt@6 cmake ninja

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake .. -G "Ninja" -DCMAKE_PREFIX_PATH="/usr/local/opt/qt@6" -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: build/
